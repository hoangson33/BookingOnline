package com.demo.models;
// Generated Jan 5, 2022, 9:32:17 PM by Hibernate Tools 5.1.10.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InfoRoom generated by hbm2java
 */
@Entity
@Table(name = "info_room", catalog = "booking_hotel")
public class InfoRoom implements java.io.Serializable {

	private Integer idRoom;
	private Account account;
	private String desc;
	private String roomCategory;
	private int quantityRoom;
	private int quantityGuest;
	private double price;
	private String locationDetails;
	private String imgRoom;
	private Date checkIn;
	private Date checkOut;
	private String roomHighlight;
	private Date created;
	private boolean status;
	private ImageRoom imageRoom;
	private HighlightRoom highlightRoom;

	public InfoRoom() {
	}

	public InfoRoom(Account account, String desc, String roomCategory, int quantityRoom, int quantityGuest,
			double price, String locationDetails, String imgRoom, Date checkIn, Date checkOut, String roomHighlight,
			Date created, boolean status) {
		this.account = account;
		this.desc = desc;
		this.roomCategory = roomCategory;
		this.quantityRoom = quantityRoom;
		this.quantityGuest = quantityGuest;
		this.price = price;
		this.locationDetails = locationDetails;
		this.imgRoom = imgRoom;
		this.checkIn = checkIn;
		this.checkOut = checkOut;
		this.roomHighlight = roomHighlight;
		this.created = created;
		this.status = status;
	}

	public InfoRoom(Account account, String desc, String roomCategory, int quantityRoom, int quantityGuest,
			double price, String locationDetails, String imgRoom, Date checkIn, Date checkOut, String roomHighlight,
			Date created, boolean status, ImageRoom imageRoom, HighlightRoom highlightRoom) {
		this.account = account;
		this.desc = desc;
		this.roomCategory = roomCategory;
		this.quantityRoom = quantityRoom;
		this.quantityGuest = quantityGuest;
		this.price = price;
		this.locationDetails = locationDetails;
		this.imgRoom = imgRoom;
		this.checkIn = checkIn;
		this.checkOut = checkOut;
		this.roomHighlight = roomHighlight;
		this.created = created;
		this.status = status;
		this.imageRoom = imageRoom;
		this.highlightRoom = highlightRoom;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_room", unique = true, nullable = false)
	public Integer getIdRoom() {
		return this.idRoom;
	}

	public void setIdRoom(Integer idRoom) {
		this.idRoom = idRoom;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "account_id", nullable = false)
	public Account getAccount() {
		return this.account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

	@Column(name = "desc", nullable = false)
	public String getDesc() {
		return this.desc;
	}

	public void setDesc(String desc) {
		this.desc = desc;
	}

	@Column(name = "room_category", nullable = false, length = 250)
	public String getRoomCategory() {
		return this.roomCategory;
	}

	public void setRoomCategory(String roomCategory) {
		this.roomCategory = roomCategory;
	}

	@Column(name = "quantity_room", nullable = false)
	public int getQuantityRoom() {
		return this.quantityRoom;
	}

	public void setQuantityRoom(int quantityRoom) {
		this.quantityRoom = quantityRoom;
	}

	@Column(name = "quantity_guest", nullable = false)
	public int getQuantityGuest() {
		return this.quantityGuest;
	}

	public void setQuantityGuest(int quantityGuest) {
		this.quantityGuest = quantityGuest;
	}

	@Column(name = "price", nullable = false, precision = 22, scale = 0)
	public double getPrice() {
		return this.price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	@Column(name = "location_details", nullable = false, length = 250)
	public String getLocationDetails() {
		return this.locationDetails;
	}

	public void setLocationDetails(String locationDetails) {
		this.locationDetails = locationDetails;
	}

	@Column(name = "img_room", nullable = false, length = 65535)
	public String getImgRoom() {
		return this.imgRoom;
	}

	public void setImgRoom(String imgRoom) {
		this.imgRoom = imgRoom;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "check_in", nullable = false, length = 10)
	public Date getCheckIn() {
		return this.checkIn;
	}

	public void setCheckIn(Date checkIn) {
		this.checkIn = checkIn;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "check_out", nullable = false, length = 10)
	public Date getCheckOut() {
		return this.checkOut;
	}

	public void setCheckOut(Date checkOut) {
		this.checkOut = checkOut;
	}

	@Column(name = "room_highlight", nullable = false, length = 1000)
	public String getRoomHighlight() {
		return this.roomHighlight;
	}

	public void setRoomHighlight(String roomHighlight) {
		this.roomHighlight = roomHighlight;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", nullable = false, length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "infoRoom")
	public ImageRoom getImageRoom() {
		return this.imageRoom;
	}

	public void setImageRoom(ImageRoom imageRoom) {
		this.imageRoom = imageRoom;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "infoRoom")
	public HighlightRoom getHighlightRoom() {
		return this.highlightRoom;
	}

	public void setHighlightRoom(HighlightRoom highlightRoom) {
		this.highlightRoom = highlightRoom;
	}

}
